#---
# this is the Karamba3D ini-file
#---
# written by Clemens Preisinger
# 15.08.2011
#
##################################################
# IN ORDER TO KEEP YOUR CHANGES IN CASE OF UPDATES
# RENAME THIS FILE TO 'karamba_user.ini' 
##################################################
#
# - comments start with '#' or ';'
# - string-formatting of numbers follows the C# formating conventions
#   here some examples:
#      just two decimal places
#          "{0:0.00}";    123.4567 -> "123.46"
#          "{0:0.00}";    123.4    -> "123.40"
#      max. two decimal places
#          "{0:0.##}";    123.4567 -> "123.46"
#          "{0:0.##}";    123.4    -> "123.4"
#          "{0:0.##}";    123.0    -> "123"
#      align numbers
#          "{0,10:0.0}";  123.4567 -> "     123.5"
#          "{0,-10:0.0}"; 123.4567 -> "123.5     "
#      ouput number in percent
#          "%";             0.1    -> "10%"
# - colors are named following the C# naming convention ()
# - for properties not found here default values will be chosen 
# - strings need to be enclosed in '"'
# - values and property names are case-sensitive
#---
#

#---
# units to be used in Karamba. Do not mix Grasshopper definitions that
# use different units. Make sure to adapt g as well when changing from SI to imperial.
#---

UnitsSystem = "SI"
# UnitsSystem = "imperial"

#---
# acceleration of gravity in m/s2. In the imperial system g needs correspond to 3.174ft/s2 otherwise the
# conversion from lbm to lbf does not work. 'gravity' is always interpreted to be in m/s^2 irrespective of
# the choice of 'UnitsSystem'
#---
# the value normally used in countries with SI units: 
gravity = 10.0
# the official value used for converting from Imperial to SI units (see https://www.quora.com/What-is-the-imperial-unit-for-mass):
# gravity = 9.80665
# the conventional standard value:
# gravity=9.80663520001 
# on the poles:
# gravity = 9.832
# on the equator:
# gravity = 9.780

#---
# limit distance for snapping together points.
# Is used as the default for the 'AssembleModel'-, 
# 'LineToBeam'-, 'MeshToShell'- and 'Line Line Intersection'-component
# it is either in meter or feet 
#---
limit_dist = 0.005

#---
# Limit absolute value of the cosine of an angle to consider
# two lines as being parallel
#---
limit_parallel = 0.99999995

#--- 
# default path of the license directory
# uncomment the entry by removing the '#' and set it to a custom value in case the default does not work for some reason
#---
# license_path = "C:\Program Files (x86)\Rhinoceros 4.0\Plug-ins\Grasshopper\Karamba\License"

#---
# number format of the 'Legend T' output of the ModelView-component for
#    stresses, strains and utilization
#---
legend_stress_number_fmt = "{0,9:0.00e+00}"
legend_strain_number_fmt = "{0,9:0.00e+00}"
legend_resdisp_number_fmt = "{0,9:0.00e+00}"
legend_utilization_number_fmt = "{0,9:0.0}%"

#---
# number of colors for visualizing stresses, strains in positive and negative range
#---
legend_num_colors = 16

#---
# if true and zero lies in the range of results then the colour range will be centred on zero
#---
center_color_range_on_zero = true

#---
# coloring of legends
# color names can either be given by name or RGB value: (red, green, blue)
# the first color signifies values below the result range
# the last color signifies values above the result range
#---
legend_colors = yellow|red|white|blue|LimeGreen
resultant_disp_legend_colors = yellow|magenta|white|magenta|LimeGreen
thickness_legend_colors = Wheat|white|Gold|Plum
beam_stress_legend_colors = yellow|red|(255,255,255)|blue|LimeGreen
beam_utilization_legend_colors = yellow|red|white|blue|LimeGreen
shell_utilization_legend_colors = yellow|red|white|blue|LimeGreen
shell_sig1_legend_colors = yellow|red|white|blue|LimeGreen
shell_sig2_legend_colors = yellow|red|white|blue|LimeGreen
shell_sigV_legend_colors = yellow|red|white|(0,0,255)|LimeGreen

#---
# default cross section color of beams and shells
#---
beam_cross_section_color = Blue
shell_cross_section_color = LightBlue

#---
# colors for coloring positive values of the cross section forces curves
#---
crosec_force_color_pos_Nx = LightSalmon
crosec_force_color_pos_Vy = LightGreen
crosec_force_color_pos_Vz = LightSkyBlue
crosec_force_color_pos_Mx = Red
crosec_force_color_pos_My = SeaGreen
crosec_force_color_pos_Mz = CadetBlue

#---
# colors for coloring negative values of the cross section forces curves
#---
crosec_force_color_neg_Nx = LightBlue
crosec_force_color_neg_Vy = LightCoral
crosec_force_color_neg_Vz = LightPink
crosec_force_color_neg_Mx = CadetBlue
crosec_force_color_neg_My = DarkOrange
crosec_force_color_neg_Mz = SandyBrown

#---
# text height and offset of cross section force values at elements
#---
crosec_force_text_height = 20
crosec_force_text_offset = 20
crosec_force_text_color = Black
crosec_force_number_fmt = "{0:f}"

#---
# color and number format for output of reaction forces
#---
reaction_number_fmt = "{0:f}"
reaction_number_color = Black

#---
# text color, height and offset of element identifiers
#---
elemID_text_height = 20
elemID_text_offset = 20
elemID_text_color = Black

#---
# text height and offset of cross section names
#---
crosec_text_height = 20
crosec_text_offset =-20
crosec_text_color = Black

#---
# text height and offset of cross material names
#---
material_text_height = 20
material_text_offset =-20
material_text_color = Black

#---
# text height and offset of node tags
#---
node_text_height = 20
node_text_offset =-20
node_text_color = Black

#---
# text height and offset of NII values at elements
#---
NII_text_height = 20
NII_text_offset =-20
NII_text_color = Black
NII_number_fmt = "{0:f}"

#---
# maximum number of beam sections for mesh display
#---
maximum_ncrosec=500

#---
# factor for number of faces for rendering circular cross sections
#---
circular_cross_sections_n_faces_factor=6

#---
# maximum number of line segments per element when drawing stress- or force-flow-lines on meshes
#---
maximum_mesh_lines_per_element=500

#---
# maximum length and number of lines of text in information output
#---
maximum_info_lines=100
maximum_info_line_length=100

#---
# offset between symbols and annotations
#---
annotation_offset=20

#---
# render settings for the graphical user interface components
#---
GUI_Text_Font_Name = "Arial"
GUI_Text_Font_Size = 8
GUI_DropDown_Font_Name = "Arial"
GUI_DropDown_Font_Size = 10
GUI_MenuHeader_Font_Name = "Arial"
GUI_DropDown_Font_Size = 8
GUI_SliderValueTag_Font_Name = "Arial"
GUI_SliderValueTag_Font_Size = 10
GUI_RadioButton_Size_X = 10
GUI_RadioButton_Size_Y = 10
GUI_CheckBox_Size_X = 10
GUI_CheckBox_Size_Y = 10

#---
# averaging procedure for calculating vertex results from element results
# when producing rendered results
#---
# possible values:
# 'average'	   take average of elements that are neighbors to a node, element results are weighted by angle
# 'maxabs'     take maximum of absolute value of neighboring element, keep sign
# 'max'        take maximum value of neighboring element
# 'min'        take minimum value of neighboring element
#---
nodal_mesh_results_from_elements = "average"

#---
# default materials:
#---
# Em[kN/cm2], Gm(inplane)[kN/cm2], G(transverse)[kN/cm2], gamma[kN/m3], alphaT[], ftk[kN/cm2], fck[kN/cm2]
#---
Steel = 21000, 8076, 8076, 78.5, 1.0E-05, 23.5, -23.5 
Concrete = 3000, 1375, 1375, 25, 1.00E-05, 0.135, -3.0
ReinforcementSteel = 21000, 10500, 10500, 78.5, 1.0E-05, 50.0, -50